local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function createGUI()
    local ScreenGui = Instance.new("ScreenGui")
    local DraggableButton = Instance.new("TextButton")
    local TextBoxWait = Instance.new("TextBox")
    local TextBoxDelay = Instance.new("TextBox")
    local UserInputService = game:GetService("UserInputService")

    ScreenGui.Name = "FakeLagGUI"
    ScreenGui.Parent = game.CoreGui

    DraggableButton.Parent = ScreenGui
    DraggableButton.BackgroundColor3 = Color3.new(0, 0, 0)
    DraggableButton.Size = UDim2.new(0, 100, 0, 50)
    DraggableButton.Position = UDim2.new(0.5, 200, 0.5, -50)
    DraggableButton.Text = "Toggle FakeLag"
    DraggableButton.TextColor3 = Color3.new(1, 1, 1)
    DraggableButton.BorderSizePixel = 0
    DraggableButton.Font = Enum.Font.SourceSans
    DraggableButton.TextSize = 18
    DraggableButton.AutoButtonColor = false

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = DraggableButton

    TextBoxWait.Parent = ScreenGui
    TextBoxWait.Size = UDim2.new(0, 100, 0, 30)
    TextBoxWait.Position = UDim2.new(0, 0, 0, 0)
    TextBoxWait.PlaceholderText = "Wait Time"
    TextBoxWait.Text = "0.05"
    TextBoxWait.TextColor3 = Color3.new(1, 1, 1)
    TextBoxWait.BackgroundColor3 = Color3.new(0, 0, 0)
    TextBoxWait.BackgroundTransparency = 0.5

    TextBoxDelay.Parent = ScreenGui
    TextBoxDelay.Size = UDim2.new(0, 100, 0, 30)
    TextBoxDelay.Position = UDim2.new(0, 125, 0, 0)
    TextBoxDelay.PlaceholderText = "Delay Time"
    TextBoxDelay.Text = "0.4"
    TextBoxDelay.TextColor3 = Color3.new(1, 1, 1)
    TextBoxDelay.BackgroundColor3 = Color3.new(0, 0, 0)
    TextBoxDelay.BackgroundTransparency = 0.5

    local dragging = false
    local dragInput
    local dragStart
    local startPos
    local FakeLag = false
    local waitTime = 0.05
    local delayTime = 0.4

    local function update(input)
        local delta = input.Position - dragStart
        DraggableButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    DraggableButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = DraggableButton.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    DraggableButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)

    DraggableButton.MouseButton1Click:Connect(function()
        FakeLag = not FakeLag
        if FakeLag then
            DraggableButton.Text = "FakeLag: ON"
        else
            DraggableButton.Text = "FakeLag: OFF"
        end
    end)

    TextBoxWait.FocusLost:Connect(function()
        waitTime = tonumber(TextBoxWait.Text) or waitTime
    end)

    TextBoxDelay.FocusLost:Connect(function()
        delayTime = tonumber(TextBoxDelay.Text) or delayTime
    end)

    coroutine.wrap(function()
        while wait(waitTime) do
            if FakeLag then
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character.HumanoidRootPart.Anchored = true
                    wait(delayTime)
                    character.HumanoidRootPart.Anchored = false
                end
            end
        end
    end)()

    -- Falling button
    local FallingButton = Instance.new("TextButton")
    FallingButton.Parent = ScreenGui  -- Ensure it is parented to ScreenGui
    FallingButton.BackgroundColor3 = Color3.new(0, 0, 0)
    FallingButton.Size = UDim2.new(0, 100, 0, 50)
    FallingButton.Position = UDim2.new(0.5, 200, 0.5, 0)
    FallingButton.Text = "Falling"
    FallingButton.TextColor3 = Color3.new(1, 1, 1)
    FallingButton.BorderSizePixel = 0
    FallingButton.Font = Enum.Font.SourceSans
    FallingButton.TextSize = 24
    FallingButton.AutoButtonColor = false

    local UICorner2 = Instance.new("UICorner")
    UICorner2.CornerRadius = UDim.new(0, 10)
    UICorner2.Parent = FallingButton

    local draggingFalling = false
    local dragInputFalling
    local dragStartFalling
    local startPosFalling
    local holdStart = 0
    local isPlatformStand = false
    local canStandUp = false

    local function updateFalling(input)
        local delta = input.Position - dragStartFalling
        FallingButton.Position = UDim2.new(startPosFalling.X.Scale, startPosFalling.X.Offset + delta.X, startPosFalling.Y.Scale, startPosFalling.Y.Offset + delta.Y)
    end

    FallingButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            draggingFalling = true
            dragStartFalling = input.Position
            startPosFalling = FallingButton.Position
            holdStart = tick()

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    draggingFalling = false
                end
            end)
        end
    end)

    FallingButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInputFalling = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if draggingFalling and input == dragInputFalling then
            updateFalling(input)
        end
    end)

    game:GetService("RunService").RenderStepped:Connect(function()
        if draggingFalling and (tick() - holdStart) >= 5 then
            FallingButton.Visible = false
        end
    end)

    FallingButton.MouseButton1Click:Connect(function()
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character.Humanoid
            if not isPlatformStand then
                humanoid.PlatformStand = true
                humanoid:Move(Vector3.new(0, -50, 0))
                canStandUp = true
                isPlatformStand = true
            elseif canStandUp then
                humanoid.PlatformStand = false
                isPlatformStand = false
                canStandUp = false
            end
        end
    end)
end

player.CharacterAdded:Connect(function()
    if game.CoreGui:FindFirstChild("FakeLagGUI") then
        game.CoreGui.FakeLagGUI:Destroy()
    end
    createGUI()
end)

createGUI()
local ScreenGui = Instance.new("ScreenGui")
local DraggableButton = Instance.new("TextButton")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "FakeLagGUI"

DraggableButton.Parent = ScreenGui
DraggableButton.BackgroundColor3 = Color3.new(0, 0, 0)
DraggableButton.Size = UDim2.new(0, 100, 0, 50)
DraggableButton.Position = UDim2.new(0.5, 200, 0.5, 50)
DraggableButton.Text = "Destroy Button"
DraggableButton.TextColor3 = Color3.new(1, 1, 1)
DraggableButton.BorderSizePixel = 0
DraggableButton.Font = Enum.Font.SourceSans
DraggableButton.TextSize = 24
DraggableButton.AutoButtonColor = false

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = DraggableButton

local dragging = false
local dragInput
local dragStart
local startPos
local holdStart = 0

DraggableButton.Activated:Connect(function()
    local fakeLagGui = game:GetService("CoreGui"):FindFirstChild("FakeLagGUI")
    if fakeLagGui then
        fakeLagGui:Destroy()
    end
local fakeLagGui = game:GetService("CoreGui"):FindFirstChild("FakeLagGUI")
    if fakeLagGui then
        fakeLagGui:Destroy()
    end
end)

local function update(input)
    local delta = input.Position - dragStart
    DraggableButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

DraggableButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = DraggableButton.Position
        holdStart = tick()

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

DraggableButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if dragging and (tick() - holdStart) >= 5 then
        DraggableButton.Visible = false
    end
end)
